name: Release

# on:
#   schedule:
#     # * is a special character in YAML so you have to quote this string
#     - cron: "0 0 * * *"
on: [push]

jobs:
  release:
    name: Release

    runs-on: macOS-latest
 
    steps:

      - name: init
        uses: actions/checkout@v1

      - name: get sha
        id: sha
        shell: bash
        run: echo "::set-output name=value::$(cat sha.txt)"

      - name: clone
        env:
          sha: ${{steps.sha.outputs.value}}
        run: |
          ls -alF
          rm -rf *
          rm -rf .git
          rm -rf .github
          ls -alF
          git clone ${{secrets.GIT_ADDRESS}} .
          git checkout $sha
        shell: bash

      - name: get package
        id: package
        uses: Ireoo/get-package@v1
        with:
          path: package.json
          key: version
     
      - name: get update
        id: update
        shell: bash
        run: echo "::set-output name=value::$(cat update.md)"

      - name: create release
        id: release
        uses: actions/create-release@v1.1.0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: v${{steps.package.outputs.version}}
          release_name: Clashr Auto v${{steps.package.outputs.version}}
          draft: false
          prerelease: false

      - name: init cache
        env:
          git_cache: ${{secrets.GIT_CACHE}}
          upload_url: ${{steps.release.outputs.upload_url}}
          github_sha: ${{github.sha}}
        run: |
          git config --global user.email "clashr.auto@gmail.com"
          git config --global user.name "Clashr Auto"
          git clone $git_cache cache
          cd cache
          echo "$upload_url" > $github_sha.txt
          git add $github_sha.txt
          git commit -m "$github_sha"
          git push
     
  build:
    needs: [release]
    
    runs-on: ${{matrix.os}}-latest
    
    strategy:
      fail-fast: false
      matrix:
        node: [14]
        os: [ubuntu, macOS, windows]

    steps:
      - name: init
        uses: actions/checkout@master

      - name: get sha
        id: sha
        shell: bash
        run: echo "::set-output name=value::$(cat sha.txt)"

      - name: clone
        env:
          sha: ${{steps.sha.outputs.value}}
        run: |
          ls -alF
          rm -rf *
          rm -rf .git
          rm -rf .github
          ls -alF
          git clone ${{secrets.GIT_ADDRESS}} .
          git checkout $sha
        shell: bash
      
      - name: set go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14.2
      
      - name: set GO111MODULE
        run: |
          go help env
          go env -w GO111MODULE="on"
          go env
        shell: bash
      
      - name: set node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      
      - name: install
        run: npm i
        shell: bash
      
      - name: clear without macos
        if: startsWith(matrix.os, 'macOS')
        run: |
          rm -rf ./command/clash/clash-freebsd*
          rm -rf ./command/clash/clash-linux*
          rm -rf ./command/clash/clash-windows*
        shell: bash
        
      - name: clear without linux
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          rm -rf ./command/clash/clash-darwin*
          rm -rf ./command/clash/clash-windows*
        shell: bash
        
      - name: clear without windows
        if: startsWith(matrix.os, 'windows')
        run: |
          rm -rf ./command/clash/clash-freebsd*
          rm -rf ./command/clash/clash-linux*
          rm -rf ./command/clash/clash-darwin*
        shell: bash
      
      - name: build
        run: npm run build:${{matrix.os}}
        shell: bash

      - name: get package version
        id: package
        uses: Ireoo/get-package@v1
        with:
          path: ./package.json
          key: version
    
      - name: get package productName
        id: package1
        uses: Ireoo/get-package@v1
        with:
          path: package.json
          key: productName
    
      - name: init cache
        id: cache
        shell: bash
        env:
          git_cache: ${{secrets.GIT_CACHE}}
          github_sha: ${{github.sha}}
        run: |
          git clone $git_cache cache
          cd cache
          echo "::set-output name=upload_url::$(cat $github_sha.txt)"

      - name: Upload Release
        uses: Ireoo/upload-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.cache.outputs.upload_url }}
          dir: build
          exts: '["exe", "dmg", "zip", "AppImage", "deb", "rpm", "apk", "msi", "pkg", "appx", "yaml", "yml"]'
          suffix: ""
